# It is the serverless configuration for Lambda of MPF Price Retrieval
#

service: mpf-price-service

# Resource

resources:
  Resources:
    mpfPriceQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: ${self:service}-mpf-price-queue-${self:provider.stage}
        VisibilityTimeout: 300
    mpfPriceWeeklyUpdateQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: ${self:service}-mpf-price-weekly-update-queue-${self:provider.stage}
        VisibilityTimeout: 300
    mpfPriceMonthlyUpdateQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: ${self:service}-mpf-price-monthly-update-queue-${self:provider.stage}
        VisibilityTimeout: 300
    # mpfDailyPriceUpdatedTopic:
    #   Type: "AWS::SNS::Topic"
    #   Properties:
    #     DisplayName: MPF Price Daily Updated Topic
    #     TopicName: ${self:service}-mpf-daily-price-updated-${self:provider.stage}
    
    # snsToMonthlyUpdateQueuePolicy:
    #   Type: AWS::SQS::QueuePolicy
    #   Properties:
    #     PolicyDocument:
    #       Version: "2012-10-17"
    #       Statement:
    #         - Sid: "allow-sns-messages"
    #           Effect: Allow
    #           Principal: "*"
    #           Resource: !GetAtt
    #             - mpfPriceMonthlyUpdateQueue
    #             - Arn
    #           Action: "SQS:SendMessage"
    #           Condition:
    #             ArnEquals:
    #               "aws:SourceArn": !Ref mpfDailyPriceUpdatedTopic
    #     Queues:
    #       - Ref: mpfPriceMonthlyUpdateQueue
          
    # mpfPriceMonthlyUpdateQueueSubscription:
    #   Type: 'AWS::SNS::Subscription'
    #   Properties:
    #     TopicArn: !Ref mpfDailyPriceUpdatedTopic
    #     Endpoint: !GetAtt
    #       - mpfPriceMonthlyUpdateQueue
    #       - Arn
    #     Protocol: sqs
    #     RawMessageDelivery: 'true'

  Outputs:
    saveMPFPriceDynamodbArn:
      Export:
        Name: saveMPFPriceDynamodbArn
      Value:
         Fn::GetAtt: SaveMPFPriceDynamodbLambdaFunction.Arn
    retrieveMPFPriceArn:
      Export:
        Name: retrieveMPFPriceArn
      Value:
         Fn::GetAtt: RetrieveMPFPriceLambdaFunction.Arn
    mpfPriceQueue:
      Export:
        Name: mpfPriceQueueName
      Value:
         Fn::GetAtt: mpfPriceQueue.QueueName

# Provider

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-2

  logs:
    restApi: true  

  tracing:
    lambda: true
    apiGateway: true

  timeout: 300

  apiKeys:
    - name: apiKey1
      value: Whalebig27Whalebig27
      description: Sample API key
  
  usagePlan:
    quota:
      limit: 5000
      offset: 2
      period: MONTH
    throttle:
      burstLimit: 200
      rateLimit: 100

# the Lambda function's IAM Role
  iamRoleStatements:
    - Effect: "Allow"
      Action:
          - "sqs:DeleteMessage"
          - "sqs:GetQueueUrl"
          - "sqs:ChangeMessageVisibility"
          - "sqs:DeleteMessageBatch"
          - "sqs:SendMessageBatch"
          - "sqs:ReceiveMessage"
          - "sqs:SendMessage"
          - "sqs:GetQueueAttributes"
          - "sqs:ChangeMessageVisibilityBatch"
      Resource:
        Fn::GetAtt:
          - mpfPriceQueue
          - Arn
    - Effect: "Allow"
      Action:
          - "sqs:DeleteMessage"
          - "sqs:GetQueueUrl"
          - "sqs:ChangeMessageVisibility"
          - "sqs:DeleteMessageBatch"
          - "sqs:SendMessageBatch"
          - "sqs:ReceiveMessage"
          - "sqs:SendMessage"
          - "sqs:GetQueueAttributes"
          - "sqs:ChangeMessageVisibilityBatch"
      Resource:
        Fn::GetAtt:
          - mpfPriceWeeklyUpdateQueue
          - Arn
    - Effect: "Allow"
      Action:
          - "sqs:DeleteMessage"
          - "sqs:GetQueueUrl"
          - "sqs:ChangeMessageVisibility"
          - "sqs:DeleteMessageBatch"
          - "sqs:SendMessageBatch"
          - "sqs:ReceiveMessage"
          - "sqs:SendMessage"
          - "sqs:GetQueueAttributes"
          - "sqs:ChangeMessageVisibilityBatch"
      Resource:
        Fn::GetAtt:
          - mpfPriceMonthlyUpdateQueue
          - Arn
    - Effect: "Allow"
      Action:
          - "sqs:DeleteMessage"
          - "dynamodb:BatchGetItem"
          - "dynamodb:ConditionCheckItem"
          - "dynamodb:PutItem"
          - "dynamodb:DeleteItem"
          - "dynamodb:GetShardIterator"
          - "dynamodb:GetItem"
          - "dynamodb:Scan"
          - "dynamodb:Query"
          - "dynamodb:UpdateItem"
          - "dynamodb:GetRecords"
      Resource: 
        Fn::Join:
          - ":"
          - - arn:aws:dynamodb
            - Ref: AWS::Region
            - Ref: AWS::AccountId
            - table/MPFPrice*
    - Effect: "Allow"
      Action:
          - "dynamodb:DescribeStream"
          - "dynamodb:GetRecords"
          - "dynamodb:GetShardIterator"
          - "dynamodb:ListStreams"
      Resource: 
        Fn::Join:
          - ":"
          - - arn:aws:dynamodb
            - Ref: AWS::Region
            - Ref: AWS::AccountId
            - table/MPFPriceDaily/stream/2019-04-20T14:06:11.854
    - Effect: "Allow"
      Action:
        - "SNS:Publish"
      Resource: { "Fn::Join" : [":", ["arn:aws:sns", { "Ref" : "AWS::Region" }, { "Ref" : "AWS::AccountId"}, "${self:service}-mpf-price-daily-update-topic-${self:provider.stage}" ] ]  }


# Package

package:
  individually: true
  exclude:
    - "**/*"  # quotes(") are needed

# Lambda definition

functions:

  # mpfPriceRetrievalScheduler:
  #   handler: mpf-price-retrieval-scheduler/index.handler
  #   description: The scheduler for MPF price retrieval
  #   memorySize: 128
  #   environment:
  #     RETRIEVE_MPF_PRICE_LAMBDA_ID: ${cf:mpf-price-service.retrieveMPFPriceArn}
  #   package:
  #     include:
  #       - mpf-price-retrieval-scheduler/**   
  #   events:
  #     - schedule:
  #       rate: rate(7 days)
  #       enable: true

  # hello:
  #   handler: hello/index.handler
  #   description: hello test
  #   memorySize: 128
  #   package:
  #     include:
  #       - hello/**
  #   events:
  #     - schedule: 
  #         rate: cron(*/1 * * * ? *)
  #         enabled: true

  getMPFPriceAPI:
    handler: get-mpf-price-api/index.fundPrice
    description: Get MPF Price API
    memorySize: 128
    package:
      include:
        - get-mpf-price-api/**
    events:
      - http:
          path: mpf/{trustee}/schemes/{scheme}/funds/{fund}/price
          method: get
          private: true
          request:
            parameters:
              paths:
                trustee: true
                scheme: true     
                fund: true

  retrieveMPFPrice:
    handler: retrieve-mpf-price/index.handler
    description: Retrieve MPF price from API and feed to SQS
    memorySize: 128
    package:
      include:
        - retrieve-mpf-price/**
    events:
      - schedule: 
          rate: cron(0 18 */7 * ? *)
          enabled: true
    environment:
      SQS_QUEUE_NAME:
        Fn::GetAtt:
          - mpfPriceQueue
          - QueueName

  saveMPFPriceDynamodb:
    handler: save-mpf-price-dynamodb/index.handler
    description: Save MPF price from SQS to DynamoDB
    memorySize: 128
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - mpfPriceQueue
              - Arn
        batchSize: 10
    package:
      include:
        - save-mpf-price-dynamodb/**

  calculateDailyMPFPriceTA:
    handler: calculate-daily-mpf-price-ta/index.handler
    description: Function to calculate daily MPF price technical analysis
    memorySize: 128
    events:
      - sns: ${self:service}-mpf-price-daily-update-topic-${self:provider.stage}
    package:
      include:
        - calculate-daily-mpf-price-ta/**

  # calculateMPFPricePeriod:
  #   handler: calculate-period-mpf-price/index.handler
  #   description: Calcuate MPF price over weekly and monthly period
  #   memorySize: 128
  #   events:
  #     - stream: 
  #         arn: arn:aws:dynamodb:us-east-2:041740121314:table/MPFPriceDaily/stream/2019-04-17T15:42:02.033
  #         batchSize: 20
  #         startingPosition: LATEST
  #   package:
  #     include:
  #       - calculate-period-mpf-price/**
  #   environment:
  #     MONTHLY_PRICE_QUEUE:
  #       Fn::GetAtt:
  #         - mpfPriceMonthlyUpdateQueue
  #         - QueueName

  calculateWeeklyAverageMPFPrice:
    handler: calculate-weekly-mpf-price/index.handler
    description: Calculate weekly average MPF price
    memorySize: 128
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - mpfPriceWeeklyUpdateQueue
              - Arn
        batchSize: 10
    package:
      include:
        - calculate-weekly-mpf-price/**

  calculateMonthlyAverageMPFPrice:
    handler: calculate-monthly-mpf-price/index.handler
    description: Calculate monthly average MPF price
    memorySize: 128
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - mpfPriceMonthlyUpdateQueue
              - Arn
        batchSize: 10
    package:
      include:
        - calculate-monthly-mpf-price/**

  distributeForAverageMPFPriceCalculation:
    handler: distribute-for-average-price-calculation/index.handler
    description: Distribute for average price calculation
    memorySize: 128
    events:
      - stream: 
          arn: arn:aws:dynamodb:us-east-2:041740121314:table/MPFPriceDaily/stream/2019-04-20T14:06:11.854
          batchSize: 30
          startingPosition: LATEST
    package:
      include:
        - distribute-for-average-price-calculation/**
    environment:
      REGION: ${self:provider.region}
      MONTHLY_PRICE_QUEUE:
        Ref: mpfPriceMonthlyUpdateQueue
      WEEKLY_PRICE_QUEUE:
        Ref: mpfPriceWeeklyUpdateQueue
      DAILY_PRICE_TOPIC:
        Fn::Join:
          - ":"
          - - arn:aws:sns
            - Ref: AWS::Region
            - Ref: AWS::AccountId
            - ${self:service}-mpf-price-daily-update-topic-${self:provider.stage}